#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2015, OpenNebula Project (OpenNebula.org), C12G Labs        #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

###############################################################################
# This script is used to copy a VM image (SRC) to the image repository as DST
# Several SRC types are supported
###############################################################################
# -------- Set up the environment to source common tools & conf ------------
if [ -z "${ONE_LOCATION}" ]; then
    LIB_LOCATION=/usr/lib/one
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
else
    LIB_LOCATION=$ONE_LOCATION/lib
    TMCOMMON=$ONE_LOCATION/var/remotes/tm/tm_common.sh
fi

. $LIB_LOCATION/sh/scripts_common.sh

DRIVER_PATH=$(dirname $0)
source ${DRIVER_PATH}/../libfs.sh
source ${DRIVER_PATH}/zfs.conf
source $TMCOMMON

# -------- Get cp and datastore arguments from OpenNebula core ------------

DRV_ACTION=$1
ID=$2

XPATH="${DRIVER_PATH}/../xpath.rb -b $DRV_ACTION"

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <($XPATH     /DS_DRIVER_ACTION_DATA/DATASTORE/BASE_PATH \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/BRIDGE_LIST \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/ZFS_CMD \
                    /DS_DRIVER_ACTION_DATA/DATASTORE/TEMPLATE/DATASET_NAME \
                    /DS_DRIVER_ACTION_DATA/IMAGE/PATH \
                    /DS_DRIVER_ACTION_DATA/IMAGE/SIZE)


unset i

BASE_PATH="${XPATH_ELEMENTS[i++]}"
BRIDGE_LIST="${XPATH_ELEMENTS[i++]}"
ZFS_CMD="${XPATH_ELEMENTS[i++]:-$ZFS_CMD}"
DATASET_NAME="${XPATH_ELEMENTS[i++]:-$DATASET_NAME}"
SRC="${XPATH_ELEMENTS[i++]}"
SIZE="${XPATH_ELEMENTS[i++]}"


DST_HOST=`get_destination_host $ID`

if [ -z "$DST_HOST" ]; then
    error_message "Datastore template missing 'BRIDGE_LIST' attribute."
    exit -1
fi

SAFE_DIRS=""

IMAGE_NAME="one-${ID}"
SRC_HOST=`arg_host $SRC`
SRC_PATH=`arg_path $SRC`
SRC_DEV="$SRC_PATH"
ZVOL_SOURCE="$DST_HOST:$DATASET_NAME/$IMAGE_NAME"
DEV="$DATASET_NAME/$IMAGE_NAME"

CLONE_CMD=$(cat <<EOF
    set -e
    $SUDO $ZFS_CMD snapshot ${SRC_PATH}@${IMAGE_NAME}
    $SUDO $ZFS_CMD clone ${SRC_PATH}@${IMAGE_NAME} ${DATASET_NAME}/${IMAGE_NAME}

    TIMEOUT=0
    until [ -b $DEV ]; do
        sleep 1 && let "TIMEOUT +=1"
        if [ "$TIMEOUT" > 10 ]; then
            error_message "Error cloning $SRC_HOST:$SRC_DEV to $DST_HOST:$DEV, volume does not appear"
            exit -1
        fi

    done

    $SUDO chown oneadmin: $DEV
EOF
)
ssh_exec_and_log "$DST_HOST" "$CLONE_CMD" \
    "Error cloning $SRC_HOST:$SRC_DEV to $DST_HOST:$DEV"

echo "$ZVOL_SOURCE"
