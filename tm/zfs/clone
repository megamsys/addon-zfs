#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2015, OpenNebula Project (OpenNebula.org), C12G Labs        #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

# clone fe:SOURCE host:remote_system_ds/disk.i size
#   - fe is the front-end hostname
#   - SOURCE is the path of the disk image in the form DS_BASE_PATH/disk
#   - host is the target host to deploy the VM
#   - remote_system_ds is the path for the system datastore in the host

SRC=$1
DST=$2
VM_ID=$3
DS_ID=$4

if [ -z "${ONE_LOCATION}" ]; then
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
else
    TMCOMMON=$ONE_LOCATION/var/remotes/tm/tm_common.sh
fi

DRIVER_PATH=$(dirname $0)

source $TMCOMMON
source ${DRIVER_PATH}/../../datastore/zfs/zfs.conf

#-------------------------------------------------------------------------------
# Set dst path and dir
#-------------------------------------------------------------------------------

SRC_HOST=`arg_host $SRC`
SRC_PATH=`arg_path $SRC`
SRC_DEV="$SRC_PATH"

DST_HOST=`arg_host $DST`
DST_PATH=`arg_path $DST`
DST_DIR=`dirname $DST_PATH`
DISK_ID=$(echo $DST_PATH|awk -F. '{print $NF}')

SNAPSHOT_NAME="${VM_ID}-${DISK_ID}"
CLONE_PATH="$SRC_PATH-$VM_ID-$DISK_ID"
CLONE_DEV="$CLONE_PATH"

#-------------------------------------------------------------------------------
# Get Image information for resizing
#-------------------------------------------------------------------------------

XPATH="${DRIVER_PATH}/../../datastore/xpath.rb --stdin"

unset i j XPATH_ELEMENTS

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <(onevm show -x $VM_ID| $XPATH \
                    /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/SIZE \
                    /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/ORIGINAL_SIZE)

SIZE="${XPATH_ELEMENTS[j++]}"
ORIGINAL_SIZE="${XPATH_ELEMENTS[j++]}"

#-------------------------------------------------------------------------------
# Clone the image
#-------------------------------------------------------------------------------

CLONE_CMD=$(cat <<EOF
    set -e
    mkdir -p $DST_DIR

    $SUDO $ZFS_CMD snapshot ${SRC_PATH}@${SNAPSHOT_NAME}
    $SUDO $ZFS_CMD clone ${SRC_PATH}@${SNAPSHOT_NAME} ${CLONE_PATH}

    TIMEOUT=0
    until [ -b $CLONE_DEV ]; do
        sleep 1 && let "TIMEOUT +=1"
        if [ "$TIMEOUT" > 10 ]; then
            error_message "Error cloning $SRC_HOST:$SRC_DEV to $DST_HOST:$DST_PATH, volume does not appear"
            exit -1
        fi
    done

    $SUDO chown oneadmin: $CLONE_DEV
    rm -f "$DST_PATH"
    ln -s "$CLONE_DEV" "$DST_PATH"
EOF
)

ssh_exec_and_log "$DST_HOST" "$CLONE_CMD" \
                 "Error cloning $SRC_HOST:$SRC_DEV to $DST_HOST:$DST_PATH"

if [ -n "$ORIGINAL_SIZE" ] && [ "$SIZE" -gt "$ORIGINAL_SIZE" ]; then
   RESIZE_CMD="${SUDO} ${ZFS_CMD} set volsize=${SIZE}m ${CLONE_PATH}"
   ssh_exec_and_log "$DST_HOST" "$RESIZE_CMD" \
       "Error resizing zvol $DST_HOST:$DST_PATH (${CLONE_PATH})"
fi

exit 0
